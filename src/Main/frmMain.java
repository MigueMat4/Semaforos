/**
 * Este programa implementa una aplicación de semáforos para la solución de
 * comunicación entre procesos. El problmea del productor-consumidor consiste
 * en un búfer de datos al cual acceden un productor y un consumidor, se debe
 * garantizar la exclusión mutua.
 */
package Main;
import java.awt.Color;
import java.util.concurrent.Semaphore; // Librería para semáforos en java
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Migue
 * @version 1.0
 * @since   2019-03-21
 */
public class frmMain extends javax.swing.JFrame {
    
    private static int bufer[] = new int[5]; // Número de ranuras en el búfer
    private static Semaphore mutex = new Semaphore(1, true); // Controla el acceso a la región crítica
    private static int vacias = 5; // Cuenta las ranuras vacías del búfer
    private static int llenas = 0; // Cuenta las ranuras llenas del búfer
    private Productor p = new Productor(); // Crea instancia de un nuevo hilo productor
    private Consumidor c = new Consumidor(); // Crea instancia de un nuevo hilo consumidor

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        this.setUndecorated(true); // evita excepción: frame is decorated
        initComponents();
        this.setLocationRelativeTo(null); // para centrar el frame
        this.setBackground(new Color(0,0,0,0)); // frame transparente
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblRegionCritica = new javax.swing.JLabel();
        btnminimizar = new javax.swing.JButton();
        btncerrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnProductor = new javax.swing.JButton();
        lblEstadoProductor = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblEstadoSemaforo = new javax.swing.JLabel();
        btnConsumidor = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblEstadoConsumidor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Búfer de datos:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, -1, -1));

        lblRegionCritica.setFont(new java.awt.Font("Tahoma", 0, 68)); // NOI18N
        lblRegionCritica.setForeground(new java.awt.Color(255, 255, 255));
        lblRegionCritica.setText("[0] [0] [0] [0] [0]");
        jPanel2.add(lblRegionCritica, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, -1, -1));

        btnminimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Scroll_Down_35px.png"))); // NOI18N
        btnminimizar.setToolTipText("Minimizar");
        btnminimizar.setBorder(null);
        btnminimizar.setBorderPainted(false);
        btnminimizar.setContentAreaFilled(false);
        btnminimizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnminimizar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Scroll_Down_40px.png"))); // NOI18N
        btnminimizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnminimizarMouseClicked(evt);
            }
        });
        jPanel2.add(btnminimizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, 50, 50));

        btncerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Cancel_35px_1.png"))); // NOI18N
        btncerrar.setToolTipText("Cerrar");
        btncerrar.setBorder(null);
        btncerrar.setBorderPainted(false);
        btncerrar.setContentAreaFilled(false);
        btncerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btncerrar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Cancel_40px.png"))); // NOI18N
        btncerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btncerrarMouseClicked(evt);
            }
        });
        jPanel2.add(btncerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 0, 50, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/f1.jpg"))); // NOI18N
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 360));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 900, 360));

        jPanel1.setBackground(new java.awt.Color(61, 61, 61));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnProductor.setFont(new java.awt.Font("Monospaced", 1, 30)); // NOI18N
        btnProductor.setForeground(new java.awt.Color(255, 255, 255));
        btnProductor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Circled_Play_35px.png"))); // NOI18N
        btnProductor.setText("Iniciar");
        btnProductor.setActionCommand("Iniciar                         ");
        btnProductor.setAlignmentY(0.0F);
        btnProductor.setBorder(null);
        btnProductor.setBorderPainted(false);
        btnProductor.setContentAreaFilled(false);
        btnProductor.setMargin(new java.awt.Insets(25, 5, 15, 5));
        btnProductor.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Circled_Play_40px.png"))); // NOI18N
        btnProductor.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnProductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductorActionPerformed(evt);
            }
        });
        jPanel1.add(btnProductor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 200, 110));

        lblEstadoProductor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEstadoProductor.setForeground(new java.awt.Color(255, 255, 255));
        lblEstadoProductor.setText("<Estado>");
        jPanel1.add(lblEstadoProductor, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 105, 70, -1));

        jLabel3.setFont(new java.awt.Font("Roboto Thin", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Productor");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 75, -1, -1));

        btnIniciar.setFont(new java.awt.Font("Monospaced", 1, 30)); // NOI18N
        btnIniciar.setForeground(new java.awt.Color(255, 255, 255));
        btnIniciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Circled_Play_35px.png"))); // NOI18N
        btnIniciar.setText("Iniciar");
        btnIniciar.setBorder(null);
        btnIniciar.setBorderPainted(false);
        btnIniciar.setContentAreaFilled(false);
        btnIniciar.setMaximumSize(new java.awt.Dimension(127, 41));
        btnIniciar.setMinimumSize(new java.awt.Dimension(127, 41));
        btnIniciar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Circled_Play_40px.png"))); // NOI18N
        btnIniciar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnIniciar.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });
        jPanel1.add(btnIniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 220, 110));

        jLabel6.setFont(new java.awt.Font("Roboto Thin", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Semáforo");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(275, 75, -1, -1));

        lblEstadoSemaforo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEstadoSemaforo.setForeground(new java.awt.Color(255, 255, 255));
        lblEstadoSemaforo.setText("<Estado>");
        jPanel1.add(lblEstadoSemaforo, new org.netbeans.lib.awtextra.AbsoluteConstraints(285, 105, -1, -1));

        btnConsumidor.setFont(new java.awt.Font("Monospaced", 1, 30)); // NOI18N
        btnConsumidor.setForeground(new java.awt.Color(255, 255, 255));
        btnConsumidor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Circled_Play_35px.png"))); // NOI18N
        btnConsumidor.setText("Iniciar");
        btnConsumidor.setBorder(null);
        btnConsumidor.setBorderPainted(false);
        btnConsumidor.setContentAreaFilled(false);
        btnConsumidor.setMaximumSize(new java.awt.Dimension(127, 41));
        btnConsumidor.setMinimumSize(new java.awt.Dimension(127, 41));
        btnConsumidor.setPreferredSize(new java.awt.Dimension(127, 41));
        btnConsumidor.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/icons8_Circled_Play_40px.png"))); // NOI18N
        btnConsumidor.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnConsumidor.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btnConsumidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsumidorActionPerformed(evt);
            }
        });
        jPanel1.add(btnConsumidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, 200, 110));

        jLabel5.setFont(new java.awt.Font("Roboto Thin", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Consumidor");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 75, -1, -1));

        lblEstadoConsumidor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEstadoConsumidor.setForeground(new java.awt.Color(255, 255, 255));
        lblEstadoConsumidor.setText("<Estado>");
        jPanel1.add(lblEstadoConsumidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 105, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, -20, 630, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        // TODO add your handling code here:
        p.start(); // Inicia el hilo productor
        c.start(); // Inicia el hilo consumidor
        btnIniciar.setText("Iniciado");
        btnIniciar.setEnabled(false);
        btnProductor.setText("Iniciado");
        btnProductor.setEnabled(false);
        btnConsumidor.setText("Iniciado");
        btnConsumidor.setEnabled(false);
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void btnProductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductorActionPerformed
        // TODO add your handling code here:
        p.start(); // Inicia el hilo productor
        btnIniciar.setText("Iniciado");
        btnIniciar.setEnabled(false);
        btnProductor.setText("Iniciado");
        btnProductor.setEnabled(false);
    }//GEN-LAST:event_btnProductorActionPerformed

    private void btnConsumidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsumidorActionPerformed
        // TODO add your handling code here:
        c.start(); // Inicia el hilo consumidor
        btnIniciar.setText("Iniciado");
        btnIniciar.setEnabled(false);
        btnConsumidor.setText("Iniciado");
        btnConsumidor.setEnabled(false);
    }//GEN-LAST:event_btnConsumidorActionPerformed

    private void btncerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btncerrarMouseClicked
        System.exit(0);
    }//GEN-LAST:event_btncerrarMouseClicked

    private void btnminimizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnminimizarMouseClicked
        this.setExtendedState(ICONIFIED); //funcion para minimizar
    }//GEN-LAST:event_btnminimizarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }
    
    public int up(int semaforo){
        semaforo++;
        return semaforo;
    }
    
    public int down(int semaforo){
        semaforo--;
        return semaforo;
    }
    
    public void insertar_elemento(int elemento){
        int pos = -1; // -1 para saber que realmente funciona la exclusión mutua
        for (int i=0; i<=4; i++)
        {
            if (bufer[i] == 0)
                pos = i;
        }
        bufer[pos] = elemento; // Si es -1 es porque no se logró la exclusión mutua
    }
    
    public int quitar_elemento(){
        int elemento;
        int pos = -1; // -1 para saber que realmente funciona la exclusión mutua
        for (int i=0; i<=4; i++)
        {
            if (bufer[i] != 0)
                pos = i;
        }
        elemento = bufer[pos]; // Si es -1 es porque no se logró la exclusión mutua
        bufer[pos] = 0;
        return elemento;
    }
    
    public void actualizarRegionCritica(){
        String texto = "";
        for (int i=0; i<=4; i++){
            texto += "[" + String.valueOf(bufer[i]) + "] ";
        }
        lblRegionCritica.setText(texto);
    }
    
    /**
    * Clases a utilizar
    */
    
    private class Productor extends Thread{
        public void run(){
            int elemento;
            while(true){ // Ciclo del productor
                elemento = this.producir_elemento(); // Genera un número para colocar en el búfer
                // Inicio semáforo vacias
                while (vacias<=0)
                    lblEstadoProductor.setText("Esperando ...");
                vacias = down(vacias);
                // Fin semáforo vacias
                try {
                    mutex.acquire(); // Entra a la región crítica
                    lblEstadoSemaforo.setText("Productor");
                } catch (InterruptedException ex) {
                    Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                insertar_elemento(elemento); // Coloca el nuevo elemento en el búfer
                lblEstadoProductor.setText(elemento + " insertado");
                actualizarRegionCritica();
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                    Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                mutex.release(); // Sale de la región crítica
                llenas = up(llenas); // Incrementa la cuenta de ranuras llenas
            }
        }
    
        private int producir_elemento(){
            lblEstadoProductor.setText("Generando numero ...");
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
            return (int)(Math.random() * 9) + 1;
        }
    }
    
    private class Consumidor extends Thread {
        public void run() {
            int elemento = 0;
            while(true){ // Ciclo del consumidor
                // Inicio semáforo llenas
                while (llenas<=0)
                    lblEstadoConsumidor.setText("Esperando ...");
                llenas = down(llenas);
                // Fin semáforo llenas
                try {
                    mutex.acquire(); // Entra a la región crítica
                    lblEstadoSemaforo.setText("Consumidor");
                } catch (InterruptedException ex) {
                    Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                elemento = quitar_elemento(); // Saca el elemento del búfer
                actualizarRegionCritica();
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                mutex.release(); // Sale de la región crítica
                vacias = up(vacias); // Disminuye la cuenta de ranuras llenas
                this.consumir_elemento(elemento);
            }
        }
        
        private void consumir_elemento(int elemento){
            lblEstadoConsumidor.setText("Consumiendo " + elemento);
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("El cuadrado de " + elemento + " es " + Math.pow(elemento, 2));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsumidor;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnProductor;
    private javax.swing.JButton btncerrar;
    private javax.swing.JButton btnminimizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblEstadoConsumidor;
    private javax.swing.JLabel lblEstadoProductor;
    private javax.swing.JLabel lblEstadoSemaforo;
    private javax.swing.JLabel lblRegionCritica;
    // End of variables declaration//GEN-END:variables
}
